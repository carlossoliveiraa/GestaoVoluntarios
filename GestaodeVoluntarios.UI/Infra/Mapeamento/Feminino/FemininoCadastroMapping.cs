using GestaodeVoluntarios.UI.Models.Feminino;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;

namespace GestaodeVoluntarios.UI.Dados.Mapeamento.Feminino
{
    public class FemininoCadastroMapping : MappingBasico<FemininoCadastro>
    {
        public override void Configure(EntityTypeBuilder<FemininoCadastro> builder)
        {
            base.Configure(builder);
            builder.ToTable("FemininoCadastros");

            builder.Property(c => c.Id).IsRequired().HasColumnName("Id");
            builder.Property(c => c.CadastroDataInclusao).HasColumnName("CadastroDataInclusao");
            builder.Property(c => c.FemininoCadastroId).HasColumnName("FemininoCadastroId");
            builder.Property(c => c.CadastroNome).HasColumnName("CadastroNome");
            builder.Property(c => c.CadastroRG).HasColumnName("CadastroRG");
            builder.Property(c => c.CadastroClasseSocial).HasColumnName("CadastroClasseSocial");
            builder.Property(c => c.CadastroObsGerais).HasColumnName("CadastroObsGerais");
            builder.Property(c => c.CadastroObs1).HasColumnName("CadastroObs1");
            builder.Property(c => c.CadastroObs2).HasColumnName("CadastroObs2");
            builder.Property(c => c.CadastroObs3).HasColumnName("CadastroObs3");
            builder.Property(c => c.CadastroDataNascimento).HasColumnName("CadastroDataNascimento");
            builder.Property(c => c.CadastroIdade).HasColumnName("CadastroIdade");
            builder.Property(c => c.CadastroTelefoneResidencial).HasColumnName("CadastroTelefoneResidencial");
            builder.Property(c => c.CadastroTelefoneCelular).HasColumnName("CadastroTelefoneCelular");
            builder.Property(c => c.CadastroTelefoneComercialRecado).HasColumnName("CadastroTelefoneComercialRecado");
            builder.Property(c => c.CadastroTelefoneWhatsapp).HasColumnName("CadastroTelefoneWhatsapp");
            builder.Property(c => c.CadastroTelefoneDiversos).HasColumnName("CadastroTelefoneDiversos");
            builder.Property(c => c.CadastroCapacidadeSentirCheiro).HasColumnName("CadastroCapacidadeSentirCheiro");
            builder.Property(c => c.CadastroDiabetico).HasColumnName("CadastroDiabetico");
            builder.Property(c => c.CadastroFumante).HasColumnName("CadastroFumante");
            builder.Property(c => c.CadastroAlergiaSimNao).HasColumnName("CadastroAlergiaSimNao");
            builder.Property(c => c.CadastroAlergiaQual).HasColumnName("CadastroAlergiaQual");
            builder.Property(c => c.DadosPessoaisCPF).HasColumnName("DadosPessoaisCPF");
            builder.Property(c => c.DadosPessoaisCEP).HasColumnName("DadosPessoaisCEP");
            builder.Property(c => c.DadosPessoaisLogradouro).HasColumnName("DadosPessoaisLogradouro");
            builder.Property(c => c.DadosPessoaisNumero).HasColumnName("DadosPessoaisNumero");
            builder.Property(c => c.DadosPessoaisComplementoBlocoApto).HasColumnName("DadosPessoaisComplementoBlocoApto");
            builder.Property(c => c.DadosPessoaisBairro).HasColumnName("DadosPessoaisBairro");
            builder.Property(c => c.DadosPessoaisCidade).HasColumnName("DadosPessoaisCidade");
            builder.Property(c => c.DadosPessoaisUF).HasColumnName("DadosPessoaisUF");
            builder.Property(c => c.FilhoSexo1).HasColumnName("FilhoSexo1");
            builder.Property(c => c.FilhoDataNascimento1).HasColumnName("FilhoDataNascimento1");
            builder.Property(c => c.FilhoSexo2).HasColumnName("FilhoSexo2");
            builder.Property(c => c.FilhoDataNascimento2).HasColumnName("FilhoDataNascimento2");
            builder.Property(c => c.FilhoSexo3).HasColumnName("FilhoSexo3");
            builder.Property(c => c.FilhoDataNascimento3).HasColumnName("FilhoDataNascimento3");
            builder.Property(c => c.FilhoSexo4).HasColumnName("FilhoSexo4");
            builder.Property(c => c.FilhoDataNascimento4).HasColumnName("FilhoDataNascimento4");
            builder.Property(c => c.FilhoSexo5).HasColumnName("FilhoSexo5");
            builder.Property(c => c.FilhoDataNascimento5).HasColumnName("FilhoDataNascimento5");
            builder.Property(c => c.FilhoSexo6).HasColumnName("FilhoSexo6");
            builder.Property(c => c.FilhoDataNascimento6).HasColumnName("FilhoDataNascimento6");
            builder.Property(c => c.EnsinoFundamentalCompleto).HasColumnName("EnsinoFundamentalCompleto");
            builder.Property(c => c.EnsinoMedioCompleto).HasColumnName("EnsinoMedioCompleto");
            builder.Property(c => c.EnsinoSuperiorCompleto).HasColumnName("EnsinoSuperiorCompleto");
            builder.Property(c => c.EnsinoPosGraduacaoCompleta).HasColumnName("EnsinoPosGraduacaoCompleta");
            builder.Property(c => c.ProfissaoNomeEmpresa).HasColumnName("ProfissaoNomeEmpresa");
            builder.Property(c => c.ProfissaoProfissao).HasColumnName("ProfissaoProfissao");
            builder.Property(c => c.Gravida).HasColumnName("Gravida");
            builder.Property(c => c.Amamenta).HasColumnName("Amamenta");
            builder.Property(c => c.LencoUmidecidoInfantil).HasColumnName("LencoUmidecidoInfantil");
            builder.Property(c => c.LencoUmidecidoIntimo).HasColumnName("LencoUmidecidoIntimo");
            builder.Property(c => c.LencoUmidecidoMaquiagem).HasColumnName("LencoUmidecidoMaquiagem");
            builder.Property(c => c.SaboneteCorporalBarra).HasColumnName("SaboneteCorporalBarra");
            builder.Property(c => c.SaboneteCorporalLiquido).HasColumnName("SaboneteCorporalLiquido");
            builder.Property(c => c.SaboneteCorporalIntimo).HasColumnName("SaboneteCorporalIntimo");
            builder.Property(c => c.SaboneteFacialBarra).HasColumnName("SaboneteFacialBarra");
            builder.Property(c => c.SaboneteFacialLiquido).HasColumnName("SaboneteFacialLiquido");
            builder.Property(c => c.SaboneteFacialEsfoliante).HasColumnName("SaboneteFacialEsfoliante");
            builder.Property(c => c.SaboneteFacialGel).HasColumnName("SaboneteFacialGel");
            builder.Property(c => c.SaboneteFacialEspuma).HasColumnName("SaboneteFacialEspuma");
            builder.Property(c => c.HigieneBucalCremeDental).HasColumnName("HigieneBucalCremeDental");
            builder.Property(c => c.HigieneBucalEscovaDental).HasColumnName("HigieneBucalEscovaDental");
            builder.Property(c => c.HigieneBucalFioDental).HasColumnName("HigieneBucalFioDental");
            builder.Property(c => c.HigieneBucalEnxaguante).HasColumnName("HigieneBucalEnxaguante");
            builder.Property(c => c.DesodoranteCorporalAerosol).HasColumnName("DesodoranteCorporalAerosol");
            builder.Property(c => c.DesodoranteCorporalCreme).HasColumnName("DesodoranteCorporalCreme");
            builder.Property(c => c.DesodoranteCorporalRollOn).HasColumnName("DesodoranteCorporalRollOn");
            builder.Property(c => c.DesodoranteCorporalSpray).HasColumnName("DesodoranteCorporalSpray");
            builder.Property(c => c.HidratanteCorporal).HasColumnName("HidratanteCorporal");
            builder.Property(c => c.HidratanteFacial).HasColumnName("HidratanteFacial");
            builder.Property(c => c.HidratanteMao).HasColumnName("HidratanteMao");
            builder.Property(c => c.HidratantePe).HasColumnName("HidratantePe");
            builder.Property(c => c.HidratanteParaBanho).HasColumnName("HidratanteParaBanho");
            builder.Property(c => c.HidratanteOleoCorporal).HasColumnName("HidratanteOleoCorporal");
            builder.Property(c => c.Bronzeador).HasColumnName("Bronzeador");
            builder.Property(c => c.ProtetorSolarCorporal).HasColumnName("ProtetorSolarCorporal");
            builder.Property(c => c.ProtetorSolarFacial).HasColumnName("ProtetorSolarFacial");
            builder.Property(c => c.ProtetorSolarLabial).HasColumnName("ProtetorSolarLabial");
            builder.Property(c => c.ProdutosCabeloShampoo).HasColumnName("ProdutosCabeloShampoo");
            builder.Property(c => c.ProdutosCabeloShampooAntiCaspa).HasColumnName("ProdutosCabeloShampooAntiCaspa");
            builder.Property(c => c.ProdutosCabeloCondicionador).HasColumnName("ProdutosCabeloCondicionador");
            builder.Property(c => c.ProdutosCabeloCondicionadorAntiCaspa).HasColumnName("ProdutosCabeloCondicionadorAntiCaspa");
            builder.Property(c => c.ProdutosCabeloCremePentear).HasColumnName("ProdutosCabeloCremePentear");
            builder.Property(c => c.ProdutosCabeloMascaraTratamento).HasColumnName("ProdutosCabeloMascaraTratamento");
            builder.Property(c => c.ProdutosCabeloGel).HasColumnName("ProdutosCabeloGel");
            builder.Property(c => c.ProdutosCabeloFinalizador).HasColumnName("ProdutosCabeloFinalizador");
            builder.Property(c => c.TipoPeleFototipo).HasColumnName("TipoPeleFototipo");
            builder.Property(c => c.TipoPeleRosto).HasColumnName("TipoPeleRosto");
            builder.Property(c => c.TipoPeleBracoPerna).HasColumnName("TipoPeleBracoPerna");
            builder.Property(c => c.TipoPeleMaoPe).HasColumnName("TipoPeleMaoPe");
            builder.Property(c => c.TipoPeleCostaPeitoral).HasColumnName("TipoPeleCostaPeitoral");
            builder.Property(c => c.TipoPeleObservacao).HasColumnName("TipoPeleObservacao");
            builder.Property(c => c.UnhaApta).HasColumnName("UnhaApta");
            builder.Property(c => c.UnhaSeNaoPorque).HasColumnName("UnhaSeNaoPorque");
            builder.Property(c => c.UnhaComprimento).HasColumnName("UnhaComprimento");
            builder.Property(c => c.UnhaUsoFrequenteEsmalte).HasColumnName("UnhaUsoFrequenteEsmalte");
            builder.Property(c => c.UnhaCuticulasIntegra).HasColumnName("UnhaCuticulasIntegra");
            builder.Property(c => c.UnhaEspessura).HasColumnName("UnhaEspessura");
            builder.Property(c => c.UnhaSudorese).HasColumnName("UnhaSudorese");
            builder.Property(c => c.UnhaObservacao).HasColumnName("UnhaObservacao");
            builder.Property(c => c.DetalhesCabeloApta).HasColumnName("DetalhesCabeloApta");
            builder.Property(c => c.DetalhesCabeloAptaSimNaoPorque).HasColumnName("DetalhesCabeloAptaSimNaoPorque");
            builder.Property(c => c.DetalhesCabeloOndeColore).HasColumnName("DetalhesCabeloOndeColore");
            builder.Property(c => c.DetalhesCabeloMegaHairAplique).HasColumnName("DetalhesCabeloMegaHairAplique");
            builder.Property(c => c.DetalhesCabeloCorNatural).HasColumnName("DetalhesCabeloCorNatural");
            builder.Property(c => c.DetalhesCabeloCorIntermedio).HasColumnName("DetalhesCabeloCorIntermedio");
            builder.Property(c => c.DetalhesCabeloCorPontas).HasColumnName("DetalhesCabeloCorPontas");
            builder.Property(c => c.DetalhesCabeloNuance).HasColumnName("DetalhesCabeloNuance");
            builder.Property(c => c.DetalhesCabeloFiosBrancosPorcentagem).HasColumnName("DetalhesCabeloFiosBrancosPorcentagem");
            builder.Property(c => c.DetalhesCabeloComprimento).HasColumnName("DetalhesCabeloComprimento");
            builder.Property(c => c.DetalhesCabeloEspessura).HasColumnName("DetalhesCabeloEspessura");
            builder.Property(c => c.DetalhesCabeloCurvatura).HasColumnName("DetalhesCabeloCurvatura");
            builder.Property(c => c.DetalhesCabeloLavagemCabelo).HasColumnName("DetalhesCabeloLavagemCabelo");
            builder.Property(c => c.DetalhesCabeloCondicao).HasColumnName("DetalhesCabeloCondicao");
            builder.Property(c => c.DetalhesCabeloObservacaoCapilar).HasColumnName("DetalhesCabeloObservacaoCapilar");
            builder.Property(c => c.CabeloTransfQuimicaNaoVirgemNatural).HasColumnName("CabeloTransfQuimicaNaoVirgemNatural");
            builder.Property(c => c.CabeloTransfColoracaoTonalizante).HasColumnName("CabeloTransfColoracaoTonalizante");
            builder.Property(c => c.CabeloTransfPermanente).HasColumnName("CabeloTransfPermanente");
            builder.Property(c => c.CabeloTransfDescoloracaoReflexoLuzesMechas).HasColumnName("CabeloTransfDescoloracaoReflexoLuzesMechas");
            builder.Property(c => c.CabeloTransfEscovaProgressiva).HasColumnName("CabeloTransfEscovaProgressiva");
            builder.Property(c => c.CabeloTransfLuzesOuAlisamento).HasColumnName("CabeloTransfLuzesOuAlisamento");
        }
    }
}
